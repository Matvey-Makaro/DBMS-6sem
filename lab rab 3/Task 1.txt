SELECT TABLE_NAME, OWNER FROM DBA_TABLES WHERE OWNER = 'PROD' or OWNER = 'DEV';

SELECT TABLE_NAME, OWNER, COLUMN_NAME, DATA_TYPE FROM ALL_TAB_COLUMNS WHERE OWNER = 'PROD' or OWNER = 'DEV';

SELECT OBJECT_NAME, OWNER, OBJECT_TYPE, CREATED FROM ALL_OBJECTS WHERE OWNER = 'PROD' or OWNER = 'DEV';

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, R_OWNER, R_CONSTRAINT_NAME, TABLE_NAME FROM ALL_CONSTRAINTS WHERE OWNER = 'DEV';

EXECUTE IMMEDIATE 'SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER = ''DEV'' AND TABLE_NAME NOT IN (
SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER = ''PROD'')';

CREATE OR REPLACE FUNCTION is_table_exists(schema_name IN VARCHAR2, tab_name IN VARCHAR2) RETURN BOOLEAN
IS
    num NUMBER;
BEGIN
    SELECT DISTINCT COUNT(TABLE_NAME) INTO num FROM DBA_TABLES WHERE OWNER = UPPER(schema_name) AND TABLE_NAME = UPPER(tab_name);
    IF num > 0 THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN FALSE;
    WHEN OTHERS THEN
        RETURN FALSE;
END is_table_exists;

SELECT is_table_exists('DEV', 'MYDEVTABLE') FROM dual;

CREATE OR REPLACE PROCEDURE cmp_schemes(dev_schema_name IN VARCHAR2, prod_schema_name IN VARCHAR2)
IS
    CURSOR get_table_name IS
    SELECT TABLE_NAME FROM DBA_TABLES
    WHERE OWNER = UPPER(dev_schema_name);
    --TYPE varchar2_arr IS TABLE OF DBA_TABLES.TABLE_NAME%TYPE;
    --varchar2_arr names_to_add := varchar2_arr();
BEGIN
    FOR table_name IN get_table_name LOOP
        IF NOT is_table_exists(prod_schema_name, table_name.TABLE_NAME) THEN
            DBMS_OUTPUT.PUT_LINE('Add table ' || table_name.TABLE_NAME);
            CONTINUE;
        END IF;


    END LOOP;
END cmp_schemes;

exec cmp_schemes('DEV', 'PROD');
